#!/bin/bash

echo "Welcome to gq_build!"

if [ ! "$#" -ge 1 ]; then
	echo "  usage: gq_build <productName> <optional arguments ...>"
	echo "    optional arguments are:"
	echo "       --gqreplace (replaces / overwrites iOS product files)"
	exit 1
fi

# filter out the first agruments and forward only the optional additional arguments to unity:
inArgs=($@)
forwardArgs=()
for i in "${!inArgs[@]}"; do
	if [ $i -gt 0 ]; then
		forwardArgs+=(${inArgs[$i]})
	fi
done

# TODO: check that given product name is valid, i.e. folder exists and minimal requirements for product

# TODO: copy associated config file into streaming assets folder of unity project

# Build Android project:
/Applications/Unity/Unity.app/Contents/MacOS/Unity -quit -batchmode \
	-projectPath /Users/muegge/projects/qv-geoquest/GQUnityClient  \
	-executeMethod Product.Builder.BuildPlayers \
	--gqproduct $1 $forwardArgs
ret_code=$?

# TODO: check whether build successful
if [ $ret_code != 0 ]; then
	printf "Build ERROR : [%d]\n\n" $ret_cod
# TODO: build failed, we should open editor.log file
  
  	exit $ret_code
else
	printf "Build succeded.\n"
fi

# TODO: store build with version number in versions folder (android and iOS seprarately)

# TODO build (and append?) iOS project